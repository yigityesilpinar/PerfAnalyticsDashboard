# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Read version form package.json
        run: echo "::set-output name=VERSION::$(npm run get:version --silent)"
        id: package_version
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            yigityesilpinar/perf-analytics-dashboard
          tags: |
            latest
            ${{ steps.package_version.outputs.VERSION }}

      - uses: actions/setup-node@v2
        with:
          node-version: "14.16.1"
      - name: Install dependencies
        run: npm install
      - name: Type and lint check
        run: |
          npm run type:check
          npm run lint
      - name: Build package
        run: npm run build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
